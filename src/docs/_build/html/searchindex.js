Search.setIndex({"docnames": ["ArtworkParser", "flask_server", "hardware", "index", "modules", "printer"], "filenames": ["ArtworkParser.rst", "flask_server.rst", "hardware.rst", "index.rst", "modules.rst", "printer.rst"], "titles": ["ArtworkParser module", "flask_server package", "hardware package", "Welcome to circuitprinter\u2019s documentation!", "src", "printer module"], "terms": {"src": 3, "artworkpars": [3, 4], "modul": [3, 4], "flask_serv": [3, 4], "packag": [3, 4], "hardwar": [3, 4], "printer": [3, 4], "index": 3, "search": 3, "page": 3, "submodul": 4, "app": 4, "databas": 4, "refreshdb": 4, "content": 4, "duetcontrol": 4, "lightcontrol": 4, "motionclientzmq": 4, "motioncontrol": 4, "motioncontroller2": 4, "motionserverzmq": 4, "neopixelcontrol": 4, "camera": 4, "testcontrol": 4, "b": [], "printer2": [], "sql_object_schema_cr": [], "class": [0, 1, 2, 5], "sourc": [0, 1, 2, 5], "base": [0, 1, 2, 5], "object": [0, 2, 5], "dxf_to_list": [0, 4], "filepath": [0, 5], "input": [0, 2], "filenam": 0, "A": [0, 1], "dxf": [0, 1], "file": [0, 1, 5], "thi": 0, "onli": 0, "process": [0, 1, 4], "line": [0, 2, 5], "polylin": [0, 5], "current": 0, "pull": 0, "from": [0, 2], "ani": 0, "layer": 0, "output": 0, "arrai": [0, 2], "each": 0, "i": [0, 1, 2], "float": 0, "tupl": 0, "z": [0, 2], "data": 0, "exampl": 0, "two": 0, "0": [0, 2, 5], "10": 0, "3": [0, 2], "5": 0, "gbr_to_list": [0, 4], "g": 0, "also": 0, "gbr": 0, "gtl": 0, "shape": 0, "need": [0, 5], "move": 0, "us": [0, 1, 5], "alon": 0, "import": 0, "print_lay": 0, "gerber": [0, 1], "read": [0, 2, 4], "o": 0, "path": [0, 1, 5], "join": 0, "ctx": 0, "gerberex": 0, "gerbercomposit": 0, "item": 0, "primit": 0, "str": 0, "type": 0, "start": [0, 2, 4], "end": 0, "apertur": 0, "level_polar": 0, "none": 0, "append": 0, "linestr": 0, "1": [0, 2], "buffer": 0, "diamet": 0, "2": [0, 5], "pass": 0, "circl": 0, "posit": [0, 2, 4], "hole_diamet": 0, "hole_width": 0, "hole_height": 0, "print": [0, 2], "format": [0, 2], "point": 0, "polygon": 0, "side": 0, "radiu": 0, "rectangl": 0, "width": 0, "height": 0, "po": 0, "minx": 0, "mini": 0, "maxx": 0, "maxi": 0, "box": 0, "center": 0, "direct": [0, 2], "quadrant_mod": 0, "arc": 0, "ellips": 0, "diamond": 0, "chamferrectangl": 0, "roundrectangl": 0, "obround": 0, "els": 0, "unknown": 0, "ink": [1, 4], "kwarg": 1, "model": 1, "id": [1, 4], "json_data": [1, 4], "text": 1, "name": [1, 4, 5], "queri": [1, 4], "t": 1, "classvar": 1, "sqlalchemi": 1, "equival": 1, "db": 1, "session": 1, "can": 1, "custom": 1, "per": 1, "overrid": 1, "query_class": 1, "The": 1, "interfac": [1, 2], "consid": 1, "legaci": 1, "prefer": 1, "execut": 1, "select": 1, "instead": 1, "artwork_path": [1, 4], "contain": 1, "tool": [1, 4, 5], "recip": [1, 4, 5], "string": [1, 2, 5], "unpars": 1, "artwork": [1, 5], "etc": 1, "list": [1, 5], "project": [1, 4], "sequenti": 1, "instanc": 1, "set": [1, 4, 5], "process_typ": [1, 4], "dict": 1, "process_paramet": 1, "allow": 1, "parmet": 1, "would": 1, "on_delai": 1, "off_delai": 1, "retract_height": 1, "extrusion_silver_print": 1, "adhesive_dispens": 1, "cure": 1, "pick_and_plac": 1, "inspect": 1, "action": 1, "possibl": 1, "take": 1, "port": 2, "dev": 2, "ttyacm0": 2, "baudrat": 2, "115200": 2, "connect": [2, 4, 5], "disconnect": [2, 4], "get_absolute_posit": [2, 4], "home": [2, 4], "homexi": [2, 4], "moverel": [2, 4], "speed": 2, "1000": 2, "parseposit": [2, 4], "send": [2, 4], "messag": 2, "setab": [2, 4], "setrel": [2, 4], "open_seri": [2, 4], "pin": 2, "17": 2, "off": [2, 4], "nathan": 2, "pretoriu": 2, "2022": 2, "motioncli": [2, 4], "serial_port": 2, "address": 2, "127": 2, "socket_port": 2, "5678": 2, "motionserv": 2, "manag": 2, "close": [2, 4], "socket": 2, "test_mod": 2, "command": 2, "serial": 2, "gcode": [2, 4], "add": 2, "correct": 2, "json": 2, "parser": 2, "get": 2, "pars": [2, 5], "core": 2, "receiv": 2, "function": 2, "sendjson": [2, 4], "json_messag": 2, "accept": 2, "convert": 2, "fals": [2, 5], "devic": 2, "return": [2, 5], "respons": 2, "wrapper": 2, "out": 2, "banner": 2, "ha": 2, "delai": 2, "true": 2, "capture_arrai": [2, 4], "ndarrai": 2, "channel": 2, "np": 2, "rgb": 2, "capture_imag": [2, 4], "pil": 2, "imag": 2, "pi": 2, "hubgit": 2, "circuitprint": 2, "venv": 2, "lib": 2, "python3": 2, "7": 2, "site": 2, "py": 2, "capture_stream": [2, 4], "bytesio": 2, "call": 2, "clean": 2, "up": 2, "context": 2, "open": [2, 4], "preview": 2, "preview_camera": [2, 4], "method": 2, "requir": 2, "gui": 2, "moveab": [2, 4], "x": 2, "y": 2, "default": 2, "2000": 2, "compilemachinecod": [4, 5], "compilepressureextrud": [4, 5], "compilestepperextrud": [4, 5], "createmachinecod": [4, 5], "hardwarespecificsetup": [4, 5], "parsedesign": [4, 5], "piezoprob": [4, 5], "runprocess": [4, 5], "saveprocess": [4, 5], "startup": [4, 5], "bedheat": [], "currenthardwar": [], "extrusionprocess": [], "loadset": [], "run": [], "firmwareflash": [], "pickandplac": [], "addtool": [], "connecttohardwar": [], "loadpreviousst": [], "processstep": [], "silverextrud": [], "uvcurehead": [], "process_set": 5, "ink_set": 5, "know": 5, "which": 5, "extrud": 5, "tool_numb": 5, "process_recip": 5, "ar": 5, "machin": 5, "code": 5, "surfac": 5, "toolnum": 5, "gcode_path": 5, "z_calibr": 5, "we": 5, "do": 5, "calibr": 5, "ye": 5, "No": 5, "gcode_list": 5, "save": 5, "tool_typ": 5, "offset": 5, "file_path": [], "file_typ": [], "todo": [], "make": [], "step": [], "iter": [], "extrus": [], "deriv": [], "higher": [], "creat": [], "doe": [], "actual": [], "That": [], "": [], "job": [], "surface_path": [], "filetyp": [], "machine_cod": [], "tool_nam": [], "tool_offset": [], "stateconfigpath": [], "configur": [], "order": [], "oper": [], "load": [], "previou": [], "state": [], "motion": [], "appli": [], "necessari": []}, "objects": {"": [[0, 0, 0, "-", "ArtworkParser"], [1, 0, 0, "-", "flask_server"], [2, 0, 0, "-", "hardware"], [5, 0, 0, "-", "printer"]], "ArtworkParser": [[0, 1, 1, "", "ArtworkParser"]], "ArtworkParser.ArtworkParser": [[0, 2, 1, "", "dxf_to_list"], [0, 2, 1, "", "gbr_to_list"], [0, 2, 1, "", "read"]], "flask_server": [[1, 0, 0, "-", "database"]], "flask_server.database": [[1, 1, 1, "", "Ink"], [1, 1, 1, "", "Process"], [1, 1, 1, "", "Project"], [1, 1, 1, "", "Recipe"], [1, 1, 1, "", "Tool"]], "flask_server.database.Ink": [[1, 3, 1, "", "id"], [1, 3, 1, "", "json_data"], [1, 3, 1, "", "name"], [1, 3, 1, "", "query"]], "flask_server.database.Process": [[1, 3, 1, "", "artwork_path"], [1, 3, 1, "", "id"], [1, 3, 1, "", "name"], [1, 3, 1, "", "query"]], "flask_server.database.Project": [[1, 3, 1, "", "content"], [1, 3, 1, "", "id"], [1, 3, 1, "", "name"], [1, 3, 1, "", "query"], [1, 3, 1, "", "settings"]], "flask_server.database.Recipe": [[1, 3, 1, "", "id"], [1, 3, 1, "", "name"], [1, 3, 1, "", "process_types"], [1, 3, 1, "", "query"]], "flask_server.database.Tool": [[1, 3, 1, "", "id"], [1, 3, 1, "", "name"], [1, 3, 1, "", "query"]], "hardware": [[2, 0, 0, "-", "DuetController"], [2, 0, 0, "-", "LightController"], [2, 0, 0, "-", "MotionClientZMQ"], [2, 0, 0, "-", "MotionController"], [2, 0, 0, "-", "MotionController2"], [2, 0, 0, "-", "camera"], [2, 0, 0, "-", "testController"]], "hardware.DuetController": [[2, 1, 1, "", "DuetController"], [2, 4, 1, "", "open_serial"]], "hardware.DuetController.DuetController": [[2, 2, 1, "", "connect"], [2, 2, 1, "", "disconnect"], [2, 2, 1, "", "get_absolute_position"], [2, 2, 1, "", "home"], [2, 2, 1, "", "homeXY"], [2, 2, 1, "", "moveRel"], [2, 2, 1, "", "parsePosition"], [2, 2, 1, "", "read"], [2, 2, 1, "", "send"], [2, 2, 1, "", "setAbs"], [2, 2, 1, "", "setRel"], [2, 2, 1, "", "start"]], "hardware.LightController": [[2, 1, 1, "", "LightController"]], "hardware.LightController.LightController": [[2, 2, 1, "", "off"], [2, 2, 1, "", "on"]], "hardware.MotionClientZMQ": [[2, 1, 1, "", "MotionClient"]], "hardware.MotionClientZMQ.MotionClient": [[2, 2, 1, "", "close"], [2, 2, 1, "", "connect"], [2, 2, 1, "", "disconnect"], [2, 2, 1, "", "gcode"], [2, 2, 1, "", "position"], [2, 2, 1, "", "send"], [2, 2, 1, "", "sendJson"]], "hardware.MotionController": [[2, 1, 1, "", "MotionController"], [2, 4, 1, "", "open_serial"]], "hardware.MotionController.MotionController": [[2, 2, 1, "", "connect"], [2, 2, 1, "", "disconnect"], [2, 2, 1, "", "read"], [2, 2, 1, "", "send"], [2, 2, 1, "", "start"]], "hardware.MotionController2": [[2, 1, 1, "", "MotionController"], [2, 4, 1, "", "open_serial"]], "hardware.MotionController2.MotionController": [[2, 2, 1, "", "connect"], [2, 2, 1, "", "disconnect"], [2, 2, 1, "", "read"], [2, 2, 1, "", "send"], [2, 2, 1, "", "start"]], "hardware.camera": [[2, 1, 1, "", "Camera"], [2, 4, 1, "", "preview_camera"]], "hardware.camera.Camera": [[2, 2, 1, "", "capture_array"], [2, 2, 1, "", "capture_image"], [2, 2, 1, "", "capture_stream"], [2, 2, 1, "", "close"], [2, 2, 1, "", "open"]], "hardware.testController": [[2, 1, 1, "", "TestController"], [2, 4, 1, "", "open_serial"]], "hardware.testController.TestController": [[2, 2, 1, "", "connect"], [2, 2, 1, "", "disconnect"], [2, 2, 1, "", "get_absolute_position"], [2, 2, 1, "", "home"], [2, 2, 1, "", "homeXY"], [2, 2, 1, "", "moveAbs"], [2, 2, 1, "", "moveRel"], [2, 2, 1, "", "read"], [2, 2, 1, "", "send"], [2, 2, 1, "", "start"]], "printer": [[5, 1, 1, "", "Printer"], [5, 1, 1, "", "Tool"]], "printer.Printer": [[5, 2, 1, "", "compileMachineCode"], [5, 2, 1, "", "compilePressureExtrude"], [5, 2, 1, "", "compileStepperExtrude"], [5, 2, 1, "", "connect"], [5, 2, 1, "", "createMachineCode"], [5, 2, 1, "", "hardwareSpecificSetup"], [5, 2, 1, "", "parseDesign"], [5, 2, 1, "", "piezoProbe"], [5, 2, 1, "", "runProcess"], [5, 2, 1, "", "saveProcess"], [5, 2, 1, "", "startup"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"]}, "titleterms": {"artworkpars": 0, "modul": [0, 1, 2, 5], "b": [], "flask_serv": 1, "packag": [1, 2], "submodul": [1, 2], "app": 1, "databas": 1, "refreshdb": 1, "content": [1, 2, 3], "hardwar": 2, "duetcontrol": 2, "lightcontrol": 2, "motionclientzmq": 2, "motioncontrol": 2, "motioncontroller2": 2, "motionserverzmq": 2, "neopixelcontrol": 2, "camera": 2, "testcontrol": 2, "welcom": 3, "circuitprint": 3, "": 3, "document": 3, "indic": 3, "tabl": 3, "src": 4, "printer": 5, "printer2": [], "sql_object_schema_cr": []}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"ArtworkParser module": [[0, "module-ArtworkParser"]], "flask_server package": [[1, "flask-server-package"]], "Submodules": [[1, "submodules"], [2, "submodules"]], "flask_server.app module": [[1, "flask-server-app-module"]], "flask_server.database module": [[1, "module-flask_server.database"]], "flask_server.refreshdb module": [[1, "flask-server-refreshdb-module"]], "Module contents": [[1, "module-flask_server"], [2, "module-hardware"]], "hardware package": [[2, "hardware-package"]], "hardware.DuetController module": [[2, "module-hardware.DuetController"]], "hardware.LightController module": [[2, "module-hardware.LightController"]], "hardware.MotionClientZMQ module": [[2, "module-hardware.MotionClientZMQ"]], "hardware.MotionController module": [[2, "module-hardware.MotionController"]], "hardware.MotionController2 module": [[2, "module-hardware.MotionController2"]], "hardware.MotionServerZMQ module": [[2, "hardware-motionserverzmq-module"]], "hardware.NeopixelController module": [[2, "hardware-neopixelcontroller-module"]], "hardware.camera module": [[2, "module-hardware.camera"]], "hardware.testController module": [[2, "module-hardware.testController"]], "Welcome to circuitprinter\u2019s documentation!": [[3, "welcome-to-circuitprinter-s-documentation"]], "Contents:": [[3, null]], "Indices and tables": [[3, "indices-and-tables"]], "src": [[4, "src"]], "printer module": [[5, "module-printer"]]}, "indexentries": {"artworkparser": [[0, "module-ArtworkParser"]], "artworkparser (class in artworkparser)": [[0, "ArtworkParser.ArtworkParser"]], "dxf_to_list() (artworkparser.artworkparser method)": [[0, "ArtworkParser.ArtworkParser.dxf_to_list"]], "gbr_to_list() (artworkparser.artworkparser method)": [[0, "ArtworkParser.ArtworkParser.gbr_to_list"]], "module": [[0, "module-ArtworkParser"], [1, "module-flask_server"], [1, "module-flask_server.database"], [2, "module-hardware"], [2, "module-hardware.DuetController"], [2, "module-hardware.LightController"], [2, "module-hardware.MotionClientZMQ"], [2, "module-hardware.MotionController"], [2, "module-hardware.MotionController2"], [2, "module-hardware.camera"], [2, "module-hardware.testController"], [5, "module-printer"]], "read() (artworkparser.artworkparser method)": [[0, "ArtworkParser.ArtworkParser.read"]], "ink (class in flask_server.database)": [[1, "flask_server.database.Ink"]], "process (class in flask_server.database)": [[1, "flask_server.database.Process"]], "project (class in flask_server.database)": [[1, "flask_server.database.Project"]], "recipe (class in flask_server.database)": [[1, "flask_server.database.Recipe"]], "tool (class in flask_server.database)": [[1, "flask_server.database.Tool"]], "artwork_path (flask_server.database.process attribute)": [[1, "flask_server.database.Process.artwork_path"]], "content (flask_server.database.project attribute)": [[1, "flask_server.database.Project.content"]], "flask_server": [[1, "module-flask_server"]], "flask_server.database": [[1, "module-flask_server.database"]], "id (flask_server.database.ink attribute)": [[1, "flask_server.database.Ink.id"]], "id (flask_server.database.process attribute)": [[1, "flask_server.database.Process.id"]], "id (flask_server.database.project attribute)": [[1, "flask_server.database.Project.id"]], "id (flask_server.database.recipe attribute)": [[1, "flask_server.database.Recipe.id"]], "id (flask_server.database.tool attribute)": [[1, "flask_server.database.Tool.id"]], "json_data (flask_server.database.ink attribute)": [[1, "flask_server.database.Ink.json_data"]], "name (flask_server.database.ink attribute)": [[1, "flask_server.database.Ink.name"]], "name (flask_server.database.process attribute)": [[1, "flask_server.database.Process.name"]], "name (flask_server.database.project attribute)": [[1, "flask_server.database.Project.name"]], "name (flask_server.database.recipe attribute)": [[1, "flask_server.database.Recipe.name"]], "name (flask_server.database.tool attribute)": [[1, "flask_server.database.Tool.name"]], "process_types (flask_server.database.recipe attribute)": [[1, "flask_server.database.Recipe.process_types"]], "query (flask_server.database.ink attribute)": [[1, "flask_server.database.Ink.query"]], "query (flask_server.database.process attribute)": [[1, "flask_server.database.Process.query"]], "query (flask_server.database.project attribute)": [[1, "flask_server.database.Project.query"]], "query (flask_server.database.recipe attribute)": [[1, "flask_server.database.Recipe.query"]], "query (flask_server.database.tool attribute)": [[1, "flask_server.database.Tool.query"]], "settings (flask_server.database.project attribute)": [[1, "flask_server.database.Project.settings"]], "camera (class in hardware.camera)": [[2, "hardware.camera.Camera"]], "duetcontroller (class in hardware.duetcontroller)": [[2, "hardware.DuetController.DuetController"]], "lightcontroller (class in hardware.lightcontroller)": [[2, "hardware.LightController.LightController"]], "motionclient (class in hardware.motionclientzmq)": [[2, "hardware.MotionClientZMQ.MotionClient"]], "motioncontroller (class in hardware.motioncontroller)": [[2, "hardware.MotionController.MotionController"]], "motioncontroller (class in hardware.motioncontroller2)": [[2, "hardware.MotionController2.MotionController"]], "testcontroller (class in hardware.testcontroller)": [[2, "hardware.testController.TestController"]], "capture_array() (hardware.camera.camera method)": [[2, "hardware.camera.Camera.capture_array"]], "capture_image() (hardware.camera.camera method)": [[2, "hardware.camera.Camera.capture_image"]], "capture_stream() (hardware.camera.camera method)": [[2, "hardware.camera.Camera.capture_stream"]], "close() (hardware.motionclientzmq.motionclient method)": [[2, "hardware.MotionClientZMQ.MotionClient.close"]], "close() (hardware.camera.camera method)": [[2, "hardware.camera.Camera.close"]], "connect() (hardware.duetcontroller.duetcontroller method)": [[2, "hardware.DuetController.DuetController.connect"]], "connect() (hardware.motionclientzmq.motionclient method)": [[2, "hardware.MotionClientZMQ.MotionClient.connect"]], "connect() (hardware.motioncontroller.motioncontroller method)": [[2, "hardware.MotionController.MotionController.connect"]], "connect() (hardware.motioncontroller2.motioncontroller method)": [[2, "hardware.MotionController2.MotionController.connect"]], "connect() (hardware.testcontroller.testcontroller method)": [[2, "hardware.testController.TestController.connect"]], "disconnect() (hardware.duetcontroller.duetcontroller method)": [[2, "hardware.DuetController.DuetController.disconnect"]], "disconnect() (hardware.motionclientzmq.motionclient method)": [[2, "hardware.MotionClientZMQ.MotionClient.disconnect"]], "disconnect() (hardware.motioncontroller.motioncontroller method)": [[2, "hardware.MotionController.MotionController.disconnect"]], "disconnect() (hardware.motioncontroller2.motioncontroller method)": [[2, "hardware.MotionController2.MotionController.disconnect"]], "disconnect() (hardware.testcontroller.testcontroller method)": [[2, "hardware.testController.TestController.disconnect"]], "gcode() (hardware.motionclientzmq.motionclient method)": [[2, "hardware.MotionClientZMQ.MotionClient.gcode"]], "get_absolute_position() (hardware.duetcontroller.duetcontroller method)": [[2, "hardware.DuetController.DuetController.get_absolute_position"]], "get_absolute_position() (hardware.testcontroller.testcontroller method)": [[2, "hardware.testController.TestController.get_absolute_position"]], "hardware": [[2, "module-hardware"]], "hardware.duetcontroller": [[2, "module-hardware.DuetController"]], "hardware.lightcontroller": [[2, "module-hardware.LightController"]], "hardware.motionclientzmq": [[2, "module-hardware.MotionClientZMQ"]], "hardware.motioncontroller": [[2, "module-hardware.MotionController"]], "hardware.motioncontroller2": [[2, "module-hardware.MotionController2"]], "hardware.camera": [[2, "module-hardware.camera"]], "hardware.testcontroller": [[2, "module-hardware.testController"]], "home() (hardware.duetcontroller.duetcontroller method)": [[2, "hardware.DuetController.DuetController.home"]], "home() (hardware.testcontroller.testcontroller method)": [[2, "hardware.testController.TestController.home"]], "homexy() (hardware.duetcontroller.duetcontroller method)": [[2, "hardware.DuetController.DuetController.homeXY"]], "homexy() (hardware.testcontroller.testcontroller method)": [[2, "hardware.testController.TestController.homeXY"]], "moveabs() (hardware.testcontroller.testcontroller method)": [[2, "hardware.testController.TestController.moveAbs"]], "moverel() (hardware.duetcontroller.duetcontroller method)": [[2, "hardware.DuetController.DuetController.moveRel"]], "moverel() (hardware.testcontroller.testcontroller method)": [[2, "hardware.testController.TestController.moveRel"]], "off() (hardware.lightcontroller.lightcontroller method)": [[2, "hardware.LightController.LightController.off"]], "on() (hardware.lightcontroller.lightcontroller method)": [[2, "hardware.LightController.LightController.on"]], "open() (hardware.camera.camera method)": [[2, "hardware.camera.Camera.open"]], "open_serial() (in module hardware.duetcontroller)": [[2, "hardware.DuetController.open_serial"]], "open_serial() (in module hardware.motioncontroller)": [[2, "hardware.MotionController.open_serial"]], "open_serial() (in module hardware.motioncontroller2)": [[2, "hardware.MotionController2.open_serial"]], "open_serial() (in module hardware.testcontroller)": [[2, "hardware.testController.open_serial"]], "parseposition() (hardware.duetcontroller.duetcontroller method)": [[2, "hardware.DuetController.DuetController.parsePosition"]], "position() (hardware.motionclientzmq.motionclient method)": [[2, "hardware.MotionClientZMQ.MotionClient.position"]], "preview_camera() (in module hardware.camera)": [[2, "hardware.camera.preview_camera"]], "read() (hardware.duetcontroller.duetcontroller method)": [[2, "hardware.DuetController.DuetController.read"]], "read() (hardware.motioncontroller.motioncontroller method)": [[2, "hardware.MotionController.MotionController.read"]], "read() (hardware.motioncontroller2.motioncontroller method)": [[2, "hardware.MotionController2.MotionController.read"]], "read() (hardware.testcontroller.testcontroller method)": [[2, "hardware.testController.TestController.read"]], "send() (hardware.duetcontroller.duetcontroller method)": [[2, "hardware.DuetController.DuetController.send"]], "send() (hardware.motionclientzmq.motionclient method)": [[2, "hardware.MotionClientZMQ.MotionClient.send"]], "send() (hardware.motioncontroller.motioncontroller method)": [[2, "hardware.MotionController.MotionController.send"]], "send() (hardware.motioncontroller2.motioncontroller method)": [[2, "hardware.MotionController2.MotionController.send"]], "send() (hardware.testcontroller.testcontroller method)": [[2, "hardware.testController.TestController.send"]], "sendjson() (hardware.motionclientzmq.motionclient method)": [[2, "hardware.MotionClientZMQ.MotionClient.sendJson"]], "setabs() (hardware.duetcontroller.duetcontroller method)": [[2, "hardware.DuetController.DuetController.setAbs"]], "setrel() (hardware.duetcontroller.duetcontroller method)": [[2, "hardware.DuetController.DuetController.setRel"]], "start() (hardware.duetcontroller.duetcontroller method)": [[2, "hardware.DuetController.DuetController.start"]], "start() (hardware.motioncontroller.motioncontroller method)": [[2, "hardware.MotionController.MotionController.start"]], "start() (hardware.motioncontroller2.motioncontroller method)": [[2, "hardware.MotionController2.MotionController.start"]], "start() (hardware.testcontroller.testcontroller method)": [[2, "hardware.testController.TestController.start"]], "printer (class in printer)": [[5, "printer.Printer"]], "tool (class in printer)": [[5, "printer.Tool"]], "compilemachinecode() (printer.printer method)": [[5, "printer.Printer.compileMachineCode"]], "compilepressureextrude() (printer.printer method)": [[5, "printer.Printer.compilePressureExtrude"]], "compilestepperextrude() (printer.printer method)": [[5, "printer.Printer.compileStepperExtrude"]], "connect() (printer.printer method)": [[5, "printer.Printer.connect"]], "createmachinecode() (printer.printer method)": [[5, "printer.Printer.createMachineCode"]], "hardwarespecificsetup() (printer.printer method)": [[5, "printer.Printer.hardwareSpecificSetup"]], "parsedesign() (printer.printer method)": [[5, "printer.Printer.parseDesign"]], "piezoprobe() (printer.printer method)": [[5, "printer.Printer.piezoProbe"]], "printer": [[5, "module-printer"]], "runprocess() (printer.printer method)": [[5, "printer.Printer.runProcess"]], "saveprocess() (printer.printer method)": [[5, "printer.Printer.saveProcess"]], "startup() (printer.printer method)": [[5, "printer.Printer.startup"]]}})